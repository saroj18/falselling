// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum STATUS {
  in_stock
  low_stock
  out_of_stock
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  firstname  String
  lastname   String
  password   String
  phone      String         @unique
  order       Order[]

}

model Product {
  id          String   @id @default(uuid())
  name        String
  category_id    String?
  price       Float
  discount    Int?
  stock       Int
  status      STATUS
  description String
  weight      Float
  dimensions  String
  sku         String?
  brand       String?
  warranty    String
  images      String[]
  tags        String[] 
  order       Order[]
  specification      String[] 
  benefits      String[] 
  applications      String[] 
  installation      String[] 
  category     Category? @relation(fields: [category_id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Blog {
  id        String   @id @default(cuid())
  title     String
  excerpt   String
  content   String
  category  String
  author    String
  status    BlogStatus @default(Draft)
  featured  Boolean  @default(false)
  tags      String[] 
  images    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BlogStatus {
  Draft
  Published
}

model Order {
  id        String   @id @default(cuid())
  user_id   String 
  orderBy   User   @relation(fields: [user_id], references: [id])
  product_id String
  orderedProduct Product @relation(fields: [product_id], references: [id])
  price     String
  discount  String
  status    OrderStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum OrderStatus {
 PENDING
 COMPLETED
 CANCEL
 RECEIVED
}



model Category {
  id  String @id @default(cuid())
  name String
  description String?
  features String[]
  tags      String[]
  avg_price Int?
  images    String[]
  products Product[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}